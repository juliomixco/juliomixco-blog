{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"names":["Layout","children","data","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","Date","getFullYear","href","query","BlogIndex","console","log","thumbnail","seoImage","imageSrc","childImageSharp","fixed","src","origin","window","location","image","css","allMarkdownRemark","totalCount","edges","map","node","key","id","to","fields","slug","rhythm","frontmatter","date","excerpt"],"mappings":"6LAkDeA,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,8BACE,YAAC,IAAD,CAAQC,UAAWD,EAAKE,KAAKC,aAAaC,QAC1C,mBACEC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,wBAAOT,GACP,gCACK,IAAIU,MAAOC,cADhB,mBAGE,iBAAGC,KAAK,4BAAR,e,+eCiDGC,EAAK,aA2BHC,UA7FG,SAAC,GAAc,IAAZb,EAAW,EAAXA,KACnBc,QAAQC,IAAIf,GAYZ,IAAMgB,EAAYhB,EAAKiB,SACvBH,QAAQC,IAAIf,EAAMgB,GAClB,IAAME,EAAWF,GAAaA,EAAUG,gBAAgBC,MAAMC,IAC1DC,EAAS,GACS,oBAAXC,SACTD,EAASC,OAAOC,SAASF,QAE3B,IAAMG,EAAQH,EAASJ,EACvB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKd,MAAM,QAAQY,UAAWS,IAC9B,uBACE,kBACEC,IAAG,GADL,sBAQA,sBAAK1B,EAAK2B,kBAAkBC,WAA5B,UACC5B,EAAK2B,kBAAkBE,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,mBAAKC,IAAKD,EAAKE,IACb,YAAC,OAAD,CACEC,GAAIH,EAAKI,OAAOC,KAChBV,IAAG,GAKH,kBACEA,IAAKA,YAAF,iBACgBW,YAAO,EAAI,GAD3B,MAIFN,EAAKO,YAAYlC,MAAO,IACzB,oBACEsB,IAAG,GADL,KAKKK,EAAKO,YAAYC,OAGxB,qBAAIR,EAAKS,kB","file":"component---src-pages-index-js-3699cefb5e2b6471b7f9.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import { css } from \"@emotion/core\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport BlogLayout from \"../components/blog-layout\"\r\nimport Image from \"../components/image\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <h1>Hi people</h1>\r\n    <p>I'm Julio Mixco</p>\r\n    <p>Welcome to my blog.</p>\r\n    <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\r\n      <Image />\r\n    </div>\r\n    <Link to=\"/page-2/\">Go to page 2</Link>\r\n  </Layout>\r\n)\r\n\r\nconst BlogIndex = ({ data }) => {\r\n  console.log(data)\r\n  // const imageData = useStaticQuery(graphql`\r\n  //   query {\r\n  //     seoImage: file(relativePath: { eq: \"images/profile.webp\" }) {\r\n  //       childImageSharp {\r\n  //         fluid(maxWidth: 300) {\r\n  //           ...GatsbyImageSharpFluid\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // `)\r\n  const thumbnail = data.seoImage\r\n  console.log(data, thumbnail)\r\n  const imageSrc = thumbnail && thumbnail.childImageSharp.fixed.src\r\n  let origin = \"\"\r\n  if (typeof window !== \"undefined\") {\r\n    origin = window.location.origin\r\n  }\r\n  const image = origin + imageSrc\r\n  return (\r\n    <BlogLayout>\r\n      <SEO title=\"Index\" thumbnail={image} />\r\n      <div>\r\n        <h1\r\n          css={css`\r\n            display: inline-block;\r\n            border-bottom: 1px solid;\r\n          `}\r\n        >\r\n          Welcome to my Blog\r\n        </h1>\r\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\r\n        {data.allMarkdownRemark.edges.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <Link\r\n              to={node.fields.slug}\r\n              css={css`\r\n                text-decoration: none;\r\n                color: inherit;\r\n              `}\r\n            >\r\n              <h3\r\n                css={css`\r\n                  margin-bottom: ${rhythm(1 / 4)};\r\n                `}\r\n              >\r\n                {node.frontmatter.title}{\" \"}\r\n                <span\r\n                  css={css`\r\n                    color: #555;\r\n                  `}\r\n                >\r\n                  — {node.frontmatter.date}\r\n                </span>\r\n              </h3>\r\n              <p>{node.excerpt}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </BlogLayout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n    seoImage: file(relativePath: { eq: \"images/profile.jpg\" }) {\r\n      childImageSharp {\r\n        fixed(width: 300, height: 157) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nexport default BlogIndex\r\n"],"sourceRoot":""}